blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages(meme)
install.packages("meme")
install.packages("meme")
install.packages("meme")
library(meme)
library(meme)
u <- system.file("angry8.jpg", package="meme")
meme(u, "code", "all the things!")
u
system.file()
u <- system.file(/home/cillian/Pictures/20180810_212513.jpg)
u <- system.file("/home/cillian/Pictures/20180810_212513.jpg")
u
u <- system.file("angry8.jpg", package="meme")
u
meme(/home/cillian/Pictures/20180810_212513.jpg, "code", "all the things!" )
meme("/home/cillian/Pictures/20180810_212513.jpg", "code", "all the things!" )
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
720/1280
720/1280 *720
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$get('fig.path')
knitr::opts_chunk$set(comment = NA, eval = FALSE)
# load packages
packages <- c("bookdown", "blogdown", "knitr")
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
#knitr::opts_chunk$set(echo = TRUE)
# this code chunk will load the packages required
# setting up the R environment for analysis
rm(list=ls())
library("papaja")
library("citr")
library(desnum)
library(MASS)
library(lsr)
library(pwr)
library(ggplot2)
library(scales)
library(extrafont)
#library(desnum)
# load mtcars and save it in your environment
df <- mtcars
# create a new dataframe with a generic name x
x <- df
# this line runs the t-test and you can see the output in the console
t.test(x$mpg~x$am)
# this line runs the t-test
# but saves the output as a list "t"
# that can be called later
t <- t.test(x$mpg~x$am)
# as with dataframes, specific variables within a list
# can be called using the dollar sign
# to call the p value simply type
t$p.value
# to call the t statistic, type
t$statistic
# to call the degrees of freedom, type
t$parameter
# get the effect size and save it to an object
td <- cohensD(mpg~am, data=x)
# get the mean miles per gallon
mean(df$mpg)
df <- mtcars
# view the variable names associated with df
variable.names(df)
# view the variable names associated with df
variable.names(df)
# view the variable names associated with df
variable.names(df)
#knitr::opts_chunk$set(comment = NA, eval = FALSE)
# load packages
packages <- c("bookdown", "blogdown", "knitr")
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
knitr::opts_chunk$set(echo = FALSE)
# this code chunk will load the packages required
# setting up the R environment for analysis
rm(list=ls())
library("papaja")
library("citr")
library(desnum)
library(MASS)
library(lsr)
library(pwr)
library(ggplot2)
library(scales)
library(extrafont)
#library(desnum)
round(td,digits=2)
paste(p_report(t$p.value))
x <- mtcars
test <- as.data.frame.matrix((table(x$cyl,x$am)))
`rownames<-`(test, c("four","six","twelve"))
test <- as.matrix((test))
test1 <- cbind(test[,1],test[,2])
test2 <- `colnames<-`(test1, c("automatic","manual"))
tb_count_perc <- function(x){
tc <- table(x$cyl,x$am)
cbind(tc[,1],paste0(round(tc[,1]/sum(x$am==0)*100),"%"),
tc[,2],paste0(round(tc[,2]/sum(x$am==1)*100),"%"))
}
test <- tb_count_perc(x)
colnames(test) <- c("N","percent","N","percent")
makespanners <- function(){
automatic <- c(2,3)
manual <- c(4,5)
spans <- list(automatic,manual)
names(spans) <- c("Automatic","Manual")
spans
}
apa_table(
test
, align = c("l", "c", "c", "c", "c")
, caption = "Type of transitions and number of cylinders"
, added_stub_head = "Number of Cylinders"
, col_spanners = makespanners()
)
blogdown:::serve_site()
blogdown:::serve_site()
